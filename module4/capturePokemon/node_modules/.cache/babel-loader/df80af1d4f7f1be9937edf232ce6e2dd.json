{"ast":null,"code":"var _jsxFileName = \"/Users/christopher/Documents/goingOverAgain/module4/capturePokemon/my-app/src/PokemonBattles.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fire from './images/fire.jpeg';\nimport water from './images/water.jpeg';\nimport fight from './images/fight.jpg';\nimport forest from './images/forest.jpg';\nimport axios from 'axios';\nexport default function PokemonBattles(props) {\n  const {\n    pokeId\n  } = useParams();\n  const [pokemon, setPokemon] = useState([]);\n  const [yourBattlePokemonObject, setYourBattlePokemonObject] = useState({});\n  const [yourPokemonArray, setYourPokemonArray] = useState([]);\n  const [toggle, setToggle] = useState(true);\n  const [images, setImages] = useState([fire, water, fight, forest]);\n  const [randomImage, setRandomImage] = useState([fire]);\n  const [secondPokemon, setSecondPokemon] = useState({});\n  const [canCatch, setCanCatch] = useState(true);\n\n  function toggled() {\n    setToggle(toggle !== toggle);\n  }\n\n  useEffect(() => {\n    axios.get('https://api.pokemontcg.io/v1/cards/' + pokeId).then(res => {\n      setYourBattlePokemonObject(res.data.card);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://api.pokemontcg.io/v1/cards').then(res => {\n      const filtered = res.data.cards.filter(one => one.supertype !== \"Energy\" && one.supertype !== \"Trainer\" && one.attacks.every(attack => attack.damage));\n      setPokemon(filtered);\n      setSecondPokemon(filtered[Math.floor(Math.random() * filtered.length)]);\n    });\n  }, []);\n  useEffect(() => {\n    if (yourBattlePokemonObject.hp <= 0) {\n      return yourPokemonArray[Math.floor(Math.random() * yourPokemonArray.length)];\n    }\n  }, [yourBattlePokemonObject]);\n\n  function getRandom() {\n    setRandomImage(images[Math.floor(Math.random() * images.length)]);\n  }\n\n  function fights() {\n    setSecondPokemon(prev => {\n      const firstRandom = Math.floor(Math.random() * yourBattlePokemonObject.attacks.length);\n      const hp = parseInt(prev.hp) - parseInt(yourBattlePokemonObject.attacks[firstRandom].damage);\n\n      if (hp <= 0) {\n        return pokemon[Math.floor(Math.random() * pokemon.length)];\n      }\n\n      return { ...prev,\n        hp\n      };\n    });\n    setYourBattlePokemonObject(prev => {\n      const secondRandom = Math.floor(Math.random() * secondPokemon.attacks.length);\n      const hp = parseInt(prev.hp) - parseInt(secondPokemon.attacks[secondRandom].damage); // if(hp<=0){\n      // return yourPokemonArray[Math.floor(Math.random()*yourPokemonArray.length)] \n      // }\n\n      return { ...prev,\n        hp\n      };\n    });\n  }\n\n  console.log(222222, yourPokemonArray);\n  console.log(111111, secondPokemon);\n\n  function capture(...second) {\n    for (let i = 0; i < yourPokemonArray.length; i++) {\n      var ids = yourPokemonArray[i].id;\n    }\n\n    if (parseInt(second[0].hp) <= 240 && ids !== second[0].id) {\n      setYourPokemonArray([second[0]]);\n      alert(`you have caught ${second[0].name}`);\n    } else alert(`you have already caught ${second[0].name}`); // if(canCatch===false){\n    //   alert('you can only capture a pokemon if its hp is 40 or less')\n    // }\n\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, toggle ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"congradulations trainer you have chosen \", yourBattlePokemonObject.name, \", go forth and bring chaos and destrucion upon your enemies and enslave... caputure as many monsters as you can\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"continue on your adventure\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: randomImage,\n    className: \"randomImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getRandom,\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \" walk\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fights,\n    className: \"button1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"fight\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => capture(secondPokemon),\n    className: \"pokeball\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"throw Pokeball\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"poke1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, yourBattlePokemonObject === null || yourBattlePokemonObject === void 0 ? void 0 : yourBattlePokemonObject.name), /*#__PURE__*/React.createElement(\"img\", {\n    src: yourBattlePokemonObject === null || yourBattlePokemonObject === void 0 ? void 0 : yourBattlePokemonObject.imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"hp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"HP:\", yourBattlePokemonObject === null || yourBattlePokemonObject === void 0 ? void 0 : yourBattlePokemonObject.hp)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"poke2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, secondPokemon === null || secondPokemon === void 0 ? void 0 : secondPokemon.name), /*#__PURE__*/React.createElement(\"img\", {\n    src: secondPokemon === null || secondPokemon === void 0 ? void 0 : secondPokemon.imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"hp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"HP:\", secondPokemon === null || secondPokemon === void 0 ? void 0 : secondPokemon.hp))));\n} // {toggleCapture?a:<button onClick={capture}>throw pokeball</button>}","map":{"version":3,"sources":["/Users/christopher/Documents/goingOverAgain/module4/capturePokemon/my-app/src/PokemonBattles.js"],"names":["React","useState","useEffect","useCallback","useParams","fire","water","fight","forest","axios","PokemonBattles","props","pokeId","pokemon","setPokemon","yourBattlePokemonObject","setYourBattlePokemonObject","yourPokemonArray","setYourPokemonArray","toggle","setToggle","images","setImages","randomImage","setRandomImage","secondPokemon","setSecondPokemon","canCatch","setCanCatch","toggled","get","then","res","data","card","filtered","cards","filter","one","supertype","attacks","every","attack","damage","Math","floor","random","length","hp","getRandom","fights","prev","firstRandom","parseInt","secondRandom","console","log","capture","second","i","ids","id","alert","name","imageUrl"],"mappings":"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","sourcesContent":["import React, {useState, useEffect,useCallback} from 'react'\nimport {useParams} from 'react-router-dom'\nimport fire from './images/fire.jpeg'\nimport water from './images/water.jpeg'\nimport fight from './images/fight.jpg'\nimport forest from './images/forest.jpg'\nimport axios from 'axios'\n\n\nexport default function PokemonBattles(props) {\n  const {pokeId} = useParams()\n  const [pokemon, setPokemon]=useState([])\n  const [yourBattlePokemonObject, setYourBattlePokemonObject]=useState({})\n  const [yourPokemonArray, setYourPokemonArray]=useState([])\n  const [toggle, setToggle]=useState(true)\n  const [images, setImages]=useState([fire,water,fight,forest])\n  const [randomImage, setRandomImage]=useState([fire])\n  const [secondPokemon, setSecondPokemon]=useState({})\n  const [canCatch, setCanCatch]=useState(true)\n  \nfunction toggled(){\n  setToggle(toggle!==toggle)\n}\n\n  useEffect(()=> {\n    axios.get('https://api.pokemontcg.io/v1/cards/' + pokeId).then(res => {\n      setYourBattlePokemonObject(res.data.card)\n    })\n  },[])\n  \n  \n  useEffect(()=>{\n    axios.get('https://api.pokemontcg.io/v1/cards')\n    .then(res=>{\n      const filtered=res.data.cards.filter(one=>one.supertype!==\"Energy\"&&one.supertype!==\"Trainer\"&&one.attacks.every(attack=> attack.damage))\n      setPokemon(filtered)\n      setSecondPokemon(filtered[Math.floor(Math.random()*filtered.length)])\n  })\n  },[])\n\n  useEffect(()=>{\n    if(yourBattlePokemonObject.hp<=0){\n      return yourPokemonArray[Math.floor(Math.random()*yourPokemonArray.length)]\n    }\n  },[yourBattlePokemonObject])\n\n  function getRandom(){\n    setRandomImage(images[Math.floor(Math.random()*images.length)])\n  }\n\n  \n\n  function fights(){\n    setSecondPokemon(prev => {\n      const firstRandom=Math.floor(Math.random()*yourBattlePokemonObject.attacks.length)\n      const hp = parseInt(prev.hp) - parseInt(yourBattlePokemonObject.attacks[firstRandom].damage)\n      if(hp<=0){\n      return pokemon[Math.floor(Math.random()*pokemon.length)]\n      }\n      return {\n        ...prev,\n        hp\n      }\n    })\n    \n    setYourBattlePokemonObject(prev=>{\n      const secondRandom=Math.floor(Math.random()*secondPokemon.attacks.length)\n      const hp = parseInt(prev.hp) - parseInt(secondPokemon.attacks[secondRandom].damage)\n      // if(hp<=0){\n        // return yourPokemonArray[Math.floor(Math.random()*yourPokemonArray.length)] \n      // }\n\n      return {\n        ...prev,\n        hp\n      }\n    })\n  }\n \n    console.log(222222,yourPokemonArray)\n  console.log(111111,secondPokemon)\n    \n    \n  function capture(...second){\n    for(let i=0; i<yourPokemonArray.length; i++){\n    var ids=yourPokemonArray[i].id\n    }\n    if (parseInt(second[0].hp)<=240 && ids!==second[0].id){\n      setYourPokemonArray([second[0]])\n      alert(`you have caught ${second[0].name}`)\n    }\n  \n   else alert(`you have already caught ${second[0].name}`)\n    // if(canCatch===false){\n    //   alert('you can only capture a pokemon if its hp is 40 or less')\n    // }\n  }\n\n  \n  return (\n    <div>\n      { toggle?\n        <div>\n          <h3>congradulations trainer you have chosen {yourBattlePokemonObject.name}, go forth and bring chaos and destrucion upon your enemies and enslave... caputure as many monsters as you can</h3>\n          <button onClick={toggled}>continue on your adventure</button>\n        </div>\n        \n        :\n        \n        <div>\n          <img src={randomImage} className='randomImage'/>\n          <button onClick={getRandom} className='button'> walk</button>\n          <button onClick={fights} className='button1'>fight</button>\n          <button onClick={()=>capture(secondPokemon)} className='pokeball'>throw Pokeball</button>\n\n          <div className='poke1'>\n          <p className='name'>{yourBattlePokemonObject?.name}</p>\n          <img src={yourBattlePokemonObject?.imageUrl}/>\n          <p className='hp'>HP:{yourBattlePokemonObject?.hp}</p>\n         </div>\n    \n         <div className='poke2'>\n          <p className='name'>{secondPokemon?.name}</p>\n          <img src={secondPokemon?.imageUrl}/>\n          <p className='hp'>HP:{secondPokemon?.hp}</p>\n         </div>\n        \n        </div>\n\n      }\n    </div>\n  )\n}\n// {toggleCapture?a:<button onClick={capture}>throw pokeball</button>}\n"]},"metadata":{},"sourceType":"module"}